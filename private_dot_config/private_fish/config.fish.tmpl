# pip install --user
# Ok, packages installed with python -m pip install --user package
fish_add_path {{ .chezmoi.homeDir }}/.local/bin

# homebrew path
fish_add_path {{ .brew_prefix }}/bin

# enable compiling against homebrew openssl
set -gx LDFLAGS "-L{{ .brew_prefix }}/opt/openssl@3/lib"
set -gx CPPFLAGS "-I{{ .brew_prefix }}/opt/openssl@3/include"
set -gx PKG_CONFIG_PATH "{{ .brew_prefix }}/opt/openssl@3/lib/pkgconfig"

# python launcher for unix
set -gx PY_PYTHON (uvx python -c "import sys; print('.'.join(map(str, sys.version_info[:2])))")

# pipx default python
# python -m pip install --user pipx
# pipx install ansible works when PIPX_DEFAULT_PYTHON is set
# and ~/Library/Python/3.10/bin/ is in PATH otherwise it wont
set -gx PIPX_DEFAULT_PYTHON {{ .brew_prefix }}/bin/python3.13
# pipx home ir in library application breaks a lot of stuff
set -gx PIPX_HOME {{ .chezmoi.homeDir }}/.local/pipx

# fzf
set -gx FZF_DEFAULT_COMMAND "fd --type f"
set -gx FZF_DEFAULT_OPTS "--layout=reverse --inline-info"

# zoxide
zoxide init fish | source

# postgres
fish_add_path {{ .brew_prefix }}/opt/postgresql@17/bin

# ruby
fish_add_path {{ .brew_prefix }}/opt/ruby/bin

# add pycharm command to PATH
fish_add_path /Applications/PyCharm.app/Contents/MacOS

# aliases
alias fvim "nvim (fzf)"
alias pcy "python commands.py"
alias pmy "python manage.py"
alias v "nvim"

alias l='eza'
alias la='eza -a'
alias ll='eza -lag -scr'
alias ls='eza --color=auto'
alias ltr='eza -lag -scr'

# rust
fish_add_path {{ .chezmoi.homeDir }}/.cargo/bin

# direnv
direnv hook fish | source

# starship
starship init fish | source

# jupyter
set -gx JUPYTER_PLATFORM_DIRS 1

# try to activate virtualenv in .venv when entering a directory
function enter_a_dir
    if test -f "$PWD/.venv/bin/activate.fish"
        source "$PWD/.venv/bin/activate.fish"
    end
end

function on_directory_change --on-variable PWD
    enter_a_dir
end

# kitty
set -gx TERM xterm

# claude
alias claude="/Users/jochen/.claude/local/claude"
alias claude-danger="claude --dangerously-skip-permissions"
alias codex-danger="codex --dangerously-skip-permissions"

# uv
set -gx UV_PYTHON_PREFERENCE only-managed


# ssh agent forwarding
if status is-interactive
    # Only run in tmux sessions
    if set -q TMUX
        # Function to update SSH agent socket from tmux environment
        function __update_ssh_auth_sock
            set -l sock (tmux showenv SSH_AUTH_SOCK 2>/dev/null | string split = | tail -1)
            if test -n "$sock" -a "$sock" != "-SSH_AUTH_SOCK" -a "$sock" != "$SSH_AUTH_SOCK"
                set -gx SSH_AUTH_SOCK $sock
            end
        end
        
        # Update immediately when shell starts (fixes new panes/windows)
        __update_ssh_auth_sock
        
        # Update before each command (fixes existing shells after reattach)
        function __ssh_agent_preexec --on-event fish_preexec
            __update_ssh_auth_sock
        end
        
        # Alternative: Update on each prompt (more reliable but slightly less efficient)
        # Uncomment this if the preexec version doesn't work reliably
        # function __ssh_agent_prompt --on-event fish_prompt
        #     __update_ssh_auth_sock
        # end
    end
end

